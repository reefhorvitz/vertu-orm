# Generated by Django 3.0.3 on 2020-03-19 17:58

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Amenity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Property Amenity')),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Cooling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Property cooling data')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Property Facilities')),
            ],
        ),
        migrations.CreateModel(
            name='Heating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Property Heating data')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=200)),
                ('number', models.IntegerField(verbose_name='House Number')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.City')),
            ],
        ),
        migrations.CreateModel(
            name='OtherData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Propertys Other Data')),
            ],
        ),
        migrations.CreateModel(
            name='Parking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Property parking data')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Property Tags')),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Property Type')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=200, unique=True)),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('password', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_built', models.IntegerField(verbose_name='Year built')),
                ('amenities', models.ManyToManyField(related_name='properties', to='backend.Amenity')),
                ('cooling', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Cooling')),
                ('facilities', models.ManyToManyField(related_name='properties', to='backend.Facility')),
                ('heating', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Heating')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Location')),
                ('other_data', models.ManyToManyField(related_name='properties', to='backend.OtherData')),
                ('parking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Parking')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.User')),
                ('tags', models.ManyToManyField(related_name='properties', to='backend.Tag')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Type')),
            ],
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Country'),
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(verbose_name='Time of the appointment')),
                ('is_completed', models.BooleanField(verbose_name='Is the meeting happened')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments_as_customer', to='backend.User')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Property')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments_as_seller', to='backend.User')),
            ],
        ),
    ]
